(** File generated by coq-of-ocaml *)
Require Import CoqOfOCaml.CoqOfOCaml.
Require Import CoqOfOCaml.Settings.

Inductive tree : Set :=
| Leaf : nat -> tree
| Node : tree -> nat -> tree -> tree.

Fixpoint mirror_tree (t_value : tree) : tree :=
  match t_value with
  | Leaf a_value => Leaf a_value
  | Node l_value v_value r_value =>
    Node (mirror_tree r_value) v_value (mirror_tree l_value)
  end.

Definition mirror_property_test (t_value : tree) : bool :=
  equiv_decb t_value (mirror_tree (mirror_tree t_value)).

Definition is_symmetric (t_value : tree) : bool :=
  equiv_decb t_value (mirror_tree t_value).
